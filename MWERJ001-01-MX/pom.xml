<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.bbva.elara</groupId>
		<artifactId>elara-batch</artifactId>
		<version>7.2.3</version>
	</parent>
	<groupId>com.bbva.mwer</groupId>
	<artifactId>MWERJ001-01-MX</artifactId>
	<version>0.0.0-SNAPSHOT</version>
	<packaging>bundle</packaging>
	<description>Job de prueba para aprovisionamiento de base de datos</description>
	<properties>
		<apx.core.batch.version>7.2.3</apx.core.batch.version>
		<osgi.version>0.0</osgi.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.bbva.elara</groupId>
			<artifactId>elara-batch-common</artifactId>
			<version>${apx.core.batch.version}</version>
		</dependency>
		<dependency>
			<groupId>com.bbva.elara</groupId>
			<artifactId>elara-batch-contextUtils</artifactId>
			<version>${apx.core.batch.version}</version>
		</dependency>
		<dependency>
			<groupId>com.bbva.elara</groupId>
			<artifactId>elara-batch-utilities</artifactId>
			<version>${apx.core.batch.version}</version>
		</dependency>
		<dependency>
			<groupId>com.bbva.elara</groupId>
			<artifactId>elara-batch-support-syslog</artifactId>
			<version>${apx.core.batch.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
		</dependency>
		<!-- EclipseLink dependencies -->
		<!-- ********************** -->
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>javax.persistence</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.antlr</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.asm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa.jpql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.oracle</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.osgi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-infrastructure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mvel</groupId>
			<artifactId>mvel</artifactId>
		</dependency>
		<!-- Test dependencies -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.batch</groupId>
			<artifactId>spring-batch-test</artifactId>
			<version>${spring.batch.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.bbva.elara</groupId>
			<artifactId>elara-batch-configuration-manager</artifactId>
			<version>${apx.core.batch.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.osgi</groupId>
			<artifactId>spring-osgi-mock</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Dependencias para el servicio de configuracion -->
		<dependency>
			<groupId>com.bbva.elara</groupId>
			<artifactId>elara-batch-configuration-manager-application</artifactId>
			<version>${apx.core.batch.version}</version>
		</dependency>
		<dependency>
			<groupId>com.bbva.mwer.dto.test</groupId>
			<artifactId>MWERC001</artifactId>
			<version>0.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.bbva.mwer</groupId>
			<artifactId>MWERRC01</artifactId>
			<version>0.0.0</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
						<Bundle-Category>job</Bundle-Category>
						<Export-Package>
							!*;version="${osgi.version}"
						</Export-Package>
						<Import-Package>
							com.bbva.mwer.lib.rc01.*;version="${osgi.version}",
							com.bbva.mwer.dto.test.*;version="${osgi.version}",
							antlr;version="${osgi.version}",
							antlr.collections;version="${osgi.version}",
							antlr.collections.impl;version="${osgi.version}",
							com.bbva.elara.batch.contextutils;version=${osgi.version},
							com.bbva.elara.batch.common.step.interceptor;version=${osgi.version},
							com.bbva.elara.batch.launcher;version=${osgi.version},
							com.bbva.elara.configuration.manager.application.factory;version=${osgi.version},
							com.ibatis.common.xml;version="${osgi.version}";resolution:="optional",
							com.ibatis.sqlmap.client;version="${osgi.version}";resolution:="optional",
							com.ibatis.sqlmap.client.event;version="${osgi.version}";resolution:="optional",
							com.ibatis.sqlmap.engine.builder.xml;version="${osgi.version}";resolution:="optional",
							com.ibatis.sqlmap.engine.execution;version="${osgi.version}";resolution:="optional",
							com.ibatis.sqlmap.engine.impl;version="${osgi.version}";resolution:="optional",
							com.ibatis.sqlmap.engine.transaction;version="${osgi.version}";resolution:="optional",
							com.ibatis.sqlmap.engine.transaction.external;version="${osgi.version}";resolution:="optional",
							com.ibatis.sqlmap.engine.type;version="${osgi.version}";resolution:="optional",
							com.thoughtworks.xstream;version="${osgi.version}";resolution:="optional",
							com.thoughtworks.xstream.converters;version="${osgi.version}";resolution:="optional",
							com.thoughtworks.xstream.converters.reflection;version="${osgi.version}";resolution:="optional",
							com.thoughtworks.xstream.io;version="${osgi.version}";resolution:="optional",
							com.thoughtworks.xstream.io.json;version="${osgi.version}";resolution:="optional",
							com.thoughtworks.xstream.io.xml;version="${osgi.version}";resolution:="optional",
							com.thoughtworks.xstream.mapper;version="${osgi.version}";resolution:="optional",
							javassist;version="${osgi.version}",
							javassist.bytecode;version="${osgi.version}",
							javassist.bytecode.annotation;version="${osgi.version}",
							javassist.util.proxy;version="${osgi.version}",
							javax.activation;version="${osgi.version}";resolution:="optional",
							javax.el;version="${osgi.version}";resolution:="optional",
							javax.inject;version="${osgi.version}";resolution:="optional",
							javax.jdo;version="${osgi.version}";resolution:="optional",
							javax.jdo.datastore;version="${osgi.version}";resolution:="optional",
							javax.jms;version="${osgi.version}";resolution:="optional",
							javax.mail.internet;version="${osgi.version}";resolution:="optional",
							javax.naming;version="${osgi.version}",
							javax.naming.event;version="${osgi.version}",
							javax.naming.spi;version="${osgi.version}",
							javax.persistence;version="${osgi.version}",
							javax.persistence.criteria;version="${osgi.version}",
							javax.persistence.metamodel;version="${osgi.version}",
							javax.persistence.spi;version="${osgi.version}",
							javax.security.auth;version="${osgi.version}",
							javax.security.jacc;version="${osgi.version}",
							javax.servlet;version="${osgi.version}";resolution:="optional",
							javax.servlet.http;version="${osgi.version}";resolution:="optional",
							javax.sql;version="${osgi.version}",
							javax.transaction;version="${osgi.version}",
							javax.transaction.xa;version="${osgi.version}",
							javax.validation;version="${osgi.version}",
							javax.validation.constraints;version="${osgi.version}",
							javax.validation.groups;version="${osgi.version}",
							javax.validation.metadata;version="${osgi.version}",
							javax.xml.bind;version="${osgi.version}";resolution:="optional",
							javax.xml.bind.annotation;version="${osgi.version}";resolution:="optional",
							javax.xml.bind.annotation.adapters;version="${osgi.version}";resolution:="optional",
							javax.xml.bind.attachment;version="${osgi.version}";resolution:="optional",
							javax.xml.datatype;version="${osgi.version}",
							javax.xml.namespace;version="${osgi.version}",
							javax.xml.parsers;version="${osgi.version}",
							javax.xml.stream;version="${osgi.version}",
							javax.xml.stream.events;version="${osgi.version}";resolution:="optional",
							javax.xml.stream.util;version="${osgi.version}";resolution:="optional",
							javax.xml.transform;version="${osgi.version}",
							javax.xml.transform.dom;version="${osgi.version}",
							javax.xml.transform.sax;version="${osgi.version}",
							javax.xml.transform.stax;version="${osgi.version}";resolution:="optional",
							javax.xml.transform.stream;version="${osgi.version}",
							javax.xml.validation;version="${osgi.version}",
							org.postgresql;version="${osgi.version}";resolution:="optional",
							org.postgresql.copy;version="${osgi.version}";resolution:="optional",
							org.postgresql.core;version="${osgi.version}";resolution:="optional",
							org.postgresql.core.types;version="${osgi.version}";resolution:="optional",
							org.postgresql.core.types.v2;version="${osgi.version}";resolution:="optional",
							org.postgresql.core.types.v3;version="${osgi.version}";resolution:="optional",
							org.postgresql.ds;version="${osgi.version}";resolution:="optional",
							org.postgresql.ds.common;version="${osgi.version}";resolution:="optional",
							org.postgresql.ds.jdbc23;version="${osgi.version}";resolution:="optional",
							org.postgresql.ds.jdbc4;version="${osgi.version}";resolution:="optional",
							org.postgresql.fastpath;version="${osgi.version}";resolution:="optional",
							org.postgresql.geometric;version="${osgi.version}";resolution:="optional",
							org.postgresql.gss;version="${osgi.version}";resolution:="optional",
							org.postgresql.jdbc2;version="${osgi.version}";resolution:="optional",
							org.postgresql.jdbc2.optional;version="${osgi.version}";resolution:="optional",
							org.postgresql.jdbc3;version="${osgi.version}";resolution:="optional",
							org.postgresql.jdbc4;version="${osgi.version}";resolution:="optional",
							org.postgresql.jdbc3g;version="${osgi.version}";resolution:="optional",
							org.postgresql.largeobject;version="${osgi.version}";resolution:="optional",
							org.postgresql.ssl;version="${osgi.version}";resolution:="optional",
							org.postgresql.translation;version="${osgi.version}";resolution:="optional",
							org.postgresql.util;version="${osgi.version}";resolution:="optional",
							org.postgresql.xa;version="${osgi.version}";resolution:="optional",
							oracle.jdbc;version="${osgi.version}";resolution:="optional",
							oracle.jdbc.driver;version="${osgi.version}";resolution:="optional",
							oracle.toplink.essentials.ejb.cmp3;version="${osgi.version}";resolution:="optional",
							oracle.toplink.essentials.expressions;version="${osgi.version}";resolution:="optional",
							oracle.toplink.essentials.internal.databaseaccess;version="${osgi.version}";resolution:="optional",
							oracle.toplink.essentials.internal.sessions;version="${osgi.version}";resolution:="optional",
							oracle.toplink.essentials.sessions;version="${osgi.version}";resolution:="optional",
							org.aopalliance.aop;version="${osgi.version}",
							org.aopalliance.intercept;version="${osgi.version}",
							org.apache.commons.dbcp;version="${osgi.version}",
							org.apache.commons.dbcp.cpdsadapter;version="${osgi.version}",
							org.apache.commons.dbcp.datasources;version="${osgi.version}",
							org.apache.commons.jocl;version="${osgi.version}",
							org.apache.commons.logging;version="${osgi.version}",
							org.apache.commons.pool;version="${osgi.version}",
							org.apache.commons.pool.impl;version="${osgi.version}",
							org.apache.log4j;version="${osgi.version}";resolution:="optional",
							org.apache.log4j.xml;version="${osgi.version}";resolution:="optional",
							org.apache.openjpa.persistence;version="${osgi.version}";resolution:="optional",
							org.apache.xmlbeans;version="${osgi.version}";resolution:="optional",
							org.aspectj.bridge;version="${osgi.version}";resolution:="optional",
							org.aspectj.weaver;version="${osgi.version}";resolution:="optional",
							org.aspectj.weaver.bcel;version="${osgi.version}";resolution:="optional",
							org.aspectj.weaver.patterns;version="${osgi.version}";resolution:="optional",
							org.codehaus.jackson;version="${osgi.version}";resolution:="optional",
							org.codehaus.jackson.map;version="${osgi.version}";resolution:="optional",
							org.eclipse.core.runtime;version="${osgi.version}";resolution:="optional",
							org.eclipse.persistence.expressions;version="${osgi.version}";resolution:="optional",
							org.eclipse.persistence.internal.databaseaccess;version="${osgi.version}";resolution:="optional",
							org.eclipse.persistence.internal.sessions;version="${osgi.version}";resolution:="optional",
							org.eclipse.persistence.jpa;version="${osgi.version}";resolution:="optional",
							org.eclipse.persistence.sessions;version="${osgi.version}";resolution:="optional",
							org.exolab.castor.mapping;version="${osgi.version}";resolution:="optional",
							org.exolab.castor.xml;version="${osgi.version}";resolution:="optional",
							org.eclipse.persistence.internal.jpa;version="${osgi.version}";resolution:="optional",
							org.eclipse.persistence.sessions.server;version="${osgi.version}";resolution:="optional",
							org.eclipse.persistence.sessions.broker;version="${osgi.version}";resolution:="optional",
							org.eclipse.persistence.queries;version="${osgi.version}";resolution:="optional",
							org.eclipse.persistence.indirection;version="${osgi.version}";resolution:="optional",
							org.jboss.vfs;version="${osgi.version}";resolution:="optional",
							org.jboss.virtual;version="${osgi.version}";resolution:="optional",
							org.jibx.runtime;version="${osgi.version}";resolution:="optional",
							org.jibx.runtime.impl;version="${osgi.version}";resolution:="optional",
							org.springframework.aop;version="${osgi.version}",
							org.springframework.aop.framework;version="${osgi.version}",
							org.springframework.aop.scope;version="${osgi.version}",
							org.springframework.aop.support;version="${osgi.version}",
							org.springframework.asm;version="${osgi.version}";resolution:="optional",
							org.springframework.asm.commons;version="${osgi.version}";resolution:="optional",
							org.springframework.batch.core;version="${osgi.version}",
							org.springframework.batch.core.configuration.xml;version="${osgi.version}",
							org.springframework.batch.core.job.flow.support;version="${osgi.version}",
							org.springframework.batch.core.job.flow.support.state;version="${osgi.version}",
							org.springframework.batch.core.repository;version="${osgi.version}",
							org.springframework.batch.core.scope;version="${osgi.version}",
							org.springframework.batch.item;version="${osgi.version}",
							org.springframework.batch.item.database;version="${osgi.version}",
							org.springframework.batch.item.file;version="${osgi.version}",
							org.springframework.batch.item.file.mapping;version="${osgi.version}";resolution:="optional",
							org.springframework.batch.item.file.transform;version="${osgi.version}",
							org.springframework.batch.support.transaction;version="${osgi.version}",
							org.springframework.beans;version="${osgi.version}",
							org.springframework.beans.factory;version="${osgi.version}",
							org.springframework.beans.factory.annotation;version="${osgi.version}",
							org.springframework.beans.factory.config;version="${osgi.version}",
							org.springframework.beans.factory.support;version="${osgi.version}",
							org.springframework.beans.factory.xml;version="${osgi.version}",
							org.springframework.beans.propertyeditors;version="${osgi.version}";resolution:="optional",
							org.springframework.context;version="${osgi.version}",
							org.springframework.context.weaving;version="${osgi.version}",
							org.springframework.core;version="${osgi.version}",
							org.springframework.core.annotation;version="${osgi.version}",
							org.springframework.core.enums;version="${osgi.version}",
							org.springframework.core.io;version="${osgi.version}",
							org.springframework.core.io.support;version="${osgi.version}",
							org.springframework.core.task;version="${osgi.version}",
							org.springframework.core.type;version="${osgi.version}",
							org.springframework.core.type.classreading;version="${osgi.version}",
							org.springframework.core.type.filter;version="${osgi.version}",
							org.springframework.dao;version="${osgi.version}",
							org.springframework.dao.support;version="${osgi.version}",
							org.springframework.instrument.classloading;version="${osgi.version}";resolution:="optional",
							org.springframework.jdbc;version="${osgi.version}",
							org.springframework.jdbc.core;version="${osgi.version}";resolution:="optional",
							org.springframework.jdbc.core.metadata;version="${osgi.version}";resolution:="optional",
							org.springframework.jdbc.core.namedparam;version="${osgi.version}";resolution:="optional",
							org.springframework.jdbc.core.simple;version="${osgi.version}";resolution:="optional",
							org.springframework.jdbc.datasource;version="${osgi.version}",
							org.springframework.jdbc.datasource.lookup;version="${osgi.version}",
							org.springframework.jdbc.support;version="${osgi.version}",
							org.springframework.jdbc.support.incrementer;version="${osgi.version}";resolution:="optional",
							org.springframework.jdbc.support.lob;version="${osgi.version}",
							org.springframework.jms;version="${osgi.version}";resolution:="optional",
							org.springframework.jms.core;version="${osgi.version}";resolution:="optional",
							org.springframework.jndi;version="${osgi.version}";resolution:="optional",
							org.springframework.mail;version="${osgi.version}";resolution:="optional",
							org.springframework.mail.javamail;version="${osgi.version}";resolution:="optional",
							org.springframework.orm.ibatis;version="${osgi.version}";resolution:="optional",
							org.springframework.orm.jpa;version="${osgi.version}";resolution:="optional",
							org.springframework.orm.jpa.support;version="${osgi.version}";resolution:="optional",
							org.springframework.orm.jpa.vendor;version="${osgi.version}";resolution:=optional,
							org.springframework.oxm;version="${osgi.version}";resolution:="optional",
							org.springframework.transaction;version="${osgi.version}",
							org.springframework.transaction.jta;version="${osgi.version}",
							org.springframework.transaction.support;version="${osgi.version}",
							org.springframework.ui;version="${osgi.version}";resolution:="optional",
							org.springframework.util;version="${osgi.version}",
							org.springframework.util.xml;version="${osgi.version}",
							org.springframework.validation;version="${osgi.version}";resolution:="optional",
							org.springframework.web.context;version="${osgi.version}";resolution:="optional",
							org.springframework.web.context.request;version="${osgi.version}";resolution:="optional",
							org.springframework.web.context.support;version="${osgi.version}";resolution:="optional",
							org.springframework.web.filter;version="${osgi.version}";resolution:="optional",
							org.w3c.dom;version="${osgi.version}",
							org.w3c.dom.ls;version="${osgi.version}",
							org.xml.sax;version="${osgi.version}",
							org.xml.sax.ext;version="${osgi.version}",
							org.xml.sax.helpers;version="${osgi.version}",
							sun.reflect;resolution:="optional";version="${osgi.version}",
							com.ibm.ws.rsadapter;version="${osgi.version}";resolution:="optional",
							com.ibm.ws.rsadapter.jdbc;version="${osgi.version}";resolution:="optional",
							com.ibm.ejs.j2c;version="${osgi.version}";resolution:="optional",
							org.springframework.transaction.annotation;version="${osgi.version}",
							org.springframework.batch.core.step.item;version="${osgi.version}",
							*;version="${osgi.version}"</Import-Package>
						<Bundle-Category>batch-Transaction</Bundle-Category>
						<Spring-Context>META-INF/spring/batch/beans/*.xml,META-INF/spring/batch/jobs/*.xml</Spring-Context>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.7.201606060606</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-prepare-agent-integration</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report-integration</id>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<!-- implementation is needed only for Maven 2 -->
								<rule implementation="org.jacoco.maven.RuleConfiguration">
									<element>BUNDLE</element>
									<limits>
										<!-- implementation is needed only for Maven 2 -->
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>${jacoco.type.coverage}</counter>
											<value>COVEREDRATIO</value>
											<minimum>${jacoco.no.coverage}</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
